import 'package:firebase_auth/firebase_auth.dart';
import 'package:google_sign_in/google_sign_in.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:ecommerce_with_bloc/firebase_options.dart'; // generated by flutterfire configure

class AuthRepository {
  final FirebaseAuth _auth = FirebaseAuth.instance;

  final GoogleSignIn _googleSignIn = GoogleSignIn.instance;

  /// Initialize GoogleSignIn with client ID
  Future<void> initializeGoogleSignIn() async {
    await _googleSignIn.initialize(
      clientId: DefaultFirebaseOptions.currentPlatform.androidClientId,
    );
  }

  /// Sign in with Google
  Future<User?> signInWithGoogle() async {
    try {
      // Ensure GoogleSignIn is initialized
      await initializeGoogleSignIn();

      // Start the sign-in flow
      final GoogleSignInAccount? googleUser = await _googleSignIn
          .authenticate();

      if (googleUser == null) {
        return null; // User canceled
      }

      final googleAuth = await googleUser.authentication;

      final credential = GoogleAuthProvider.credential(
        idToken: googleAuth.idToken,
      );

      final userCredential = await _auth.signInWithCredential(credential);

      return userCredential.user;
    } catch (e) {
      debugPrint("Google sign-in error: $e");
      return null;
    }
  }

  Future<void> signOut() async {
    await _googleSignIn.disconnect();
    await _auth.signOut();
  }

  User? getCurrentUser() => _auth.currentUser;
}
